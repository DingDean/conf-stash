"引入Vundle插件管理器配置
set nocompatible              " be iMproved, required

" 自动安装 vim-plug
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

"引入功能性插件
Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --bin' }
Plug 'junegunn/fzf.vim'
" Plug 'yuki-ycino/fzf-preview.vim', { 'branch': 'release', 'do': ':UpdateRemotePlugins' }
Plug 'junegunn/vader.vim'
Plug 'junegunn/goyo.vim'
Plug 'junegunn/limelight.vim'
Plug 'christoomey/vim-tmux-navigator'
Plug 'majutsushi/tagbar'
Plug 'arcticicestudio/nord-vim'
Plug 'andymass/vim-matchup'
" Plug 'previm/previm' " markdown 实时预览
Plug 'mhinz/vim-grepper', { 'on': ['Grepper', '<plug>(GrepperOperator)'] }
Plug 'rhysd/git-messenger.vim' " commit msg under cursor
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app && yarn install'  }
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
Plug 'itchyny/lightline.vim'
Plug 'w0rp/ale'
Plug 'vimwiki/vimwiki'
Plug 'michal-h21/vim-zettel'
Plug 'machakann/vim-sandwich'
Plug 'tpope/vim-fugitive'
" Plug 'airblade/vim-gitgutter'
Plug 'sodapopcan/vim-twiggy'
Plug 'scrooloose/nerdcommenter'
Plug 'editorconfig/editorconfig-vim'
Plug 'jiangmiao/auto-pairs'
Plug 'Yggdroot/indentLine'
Plug 'wincent/ferret'
Plug 'justinmk/vim-sneak'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-dispatch'
" Plug 'nvim-treesitter/nvim-treesitter'
" Plug 'tmsvg/pear-tree'

" "语言相关插件 ->
" "Stylus
Plug 'wavded/vim-stylus'                  "stylus语法高亮
" "Javascript
" Plug 'pangloss/vim-javascript'            "JS Syntax Support
" " Plug 'peitalin/vim-jsx-typescript'
" Plug 'mxw/vim-jsx'                        "Better Js Syntax Support
" Plug 'ianks/vim-tsx'
Plug 'heavenshell/vim-jsdoc'              "函数注释
Plug 'posva/vim-vue'
Plug 'digitaltoad/vim-pug'
Plug 'othree/html5.vim'
" Typescript
Plug 'leafgarland/typescript-vim'
" Plug 'peitalin/vim-jsx-typescript'
" Rust
Plug 'rust-lang/rust.vim'
" GraphQL
Plug 'jparise/vim-graphql'
" Thrift
Plug 'solarnz/thrift.vim'
" Ruby
Plug 'nvim-lua/plenary.nvim'
" WGSL
Plug '~/Projects/wgsl.vim'
" Toml
Plug 'cespare/vim-toml'

call plug#end()
filetype plugin indent on

if &shell =~# 'fish'
  set shell=/bin/bash
  let $SHELL = "/bin/bash"
endif

syntax on
set hidden
set t_Co=256
" set background=light
colorscheme nord
" colorscheme onehalfdark

set relativenumber
set number
set showmode
set smartcase

set expandtab
set smarttab
set softtabstop=0
set tabstop=2
set shiftwidth=2
set autoindent
set smartindent

set hls

set nobackup
set nowritebackup
set history=50
set ruler
set showcmd
set incsearch

set lazyredraw
set showmatch
set signcolumn=yes

inoremap jk <esc>

nnoremap <leader>ev :vsplit $MY_CONF_DIR/vim/vimrc.nvim<cr>
nnoremap <leader>sv :source $MY_CONF_DIR/vim/vimrc.nvim<cr>
nnoremap <leader>ea :vsplit $MY_CONF_DIR/vim/abbrev.vim<cr>
nnoremap <leader>ep :vsplit $MY_CONF_DIR/vim/plugins.vim<cr>
nnoremap <leader>pl :CocList post<cr>
nnoremap <leader>pa :CocCommand post.new<cr>
nnoremap <leader>pd :CocCommand post.do<cr>
nnoremap <leader>to :TagbarOpen<cr>
nnoremap <leader>tc :TagbarClose<cr>
nnoremap <leader>tg :Twiggy<cr>
nnoremap <leader>go :Goyo<cr>
nnoremap <leader>nf :NERDTreeFind<cr>
nnoremap <leader>f  :CocFix<cr>
nnoremap <leader>hl :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'
\ . synIDattr(synID(line("."),col("."),0),"name") . "> lo<"
\ . synIDattr(synIDtrans(synID(line("."),col("."),1)),"name") . ">"<CR>

nnoremap <c-n> :NERDTreeToggle<cr>
nnoremap ; :

let g:loaded_python_provider = 0

autocmd BufWritePre *.tsx :Prettier
autocmd FileType rust nnoremap <leader>e :Dispatch cargo run --example %:t:r<cr>
autocmd FileType rust nnoremap <leader>r :Dispatch cargo run<cr>
autocmd FileType rust nnoremap <leader>b :Dispatch cargo build<cr>
autocmd FileType rust nnoremap <leader>bb :Dispatch cargo build --release<cr>
autocmd FileType rust nnoremap <leader>rr :Dispatch cargo run --release<cr>
autocmd FileType vimwiki nnoremap <c-o> :set conceallevel=0<cr>
autocmd FileType vimwiki nnoremap <c-z> :set conceallevel=2<cr>

let g:ruby_host_prog = "rbenv exec neovim-ruby-host"

autocmd BufWritePre *.ts :Prettier

" 自动纠错
source $MY_CONF_DIR/vim/abbrev.vim
source $MY_CONF_DIR/vim/plugins.vim
source $MY_CONF_DIR/vim/plugin.vimwiki.vim
